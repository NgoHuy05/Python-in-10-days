from math import *
from functools import cmp_to_key
class NhanVien:
    def __init__(self, id, name, gt, date, place, ma, ngay):
        self.__id =  str(id).zfill(5)
        self.__name = name
        self.__gt = gt
        self.__date = date
        self.__place = place
        self.__ma = ma
        self.__ngay = ngay
    def get_date(self):
        return self.__date
    def get_id(self):
        return self.__id
    def ch(self):
        if self.__date[1] == '/':
            self.__date = '0' + self.__date
        if self.__date[4] == '/':
            self.__date = self.__date[0:3] + '0' + self.__date[3:]
        if self.__ngay[1] == '/':
            self.__ngay = '0' + self.__ngay
        if self.__ngay[4] == '/':
            self.__ngay = self.__ngay[0:3] + '0' + self.__ngay[3:]
    def __str__(self):
        return f'{self.__id} {self.__name} {self.__gt} {self.__date} {self.__place} {self.__ma} {self.__ngay}'
def cmp(a,b):
    ns1, ns2 = a.get_date(), b.get_date()
    a1 = list(map(int,ns1.split('/')))
    a2 = list(map(int,ns2.split('/')))
    for i in range(-1, -4, -1):
        if a1[i] != a2[i]:
            return a1[i] - a2[i]
    if a.get_id() < b.get_id():
            return -1
    else:
            return 1
if __name__ == '__main__':
    n = int(input())
    a = []
    for i in range(n):
        m = NhanVien(i + 1, input(), input(), input(), input(),input(),input())
        m.ch()
        a.append(m)
    a.sort(key = cmp_to_key(cmp))
    for i in a:
        print(i, end = '\n')
